@use 'variable.scss' as var;

.switch {
  direction: ltr;
  --button-width: 3em;
  --button-height: 1.5em;
  --toggle-diameter: 1em;
  --button-toggle-offset: calc(
    (var(--button-height) - var(--toggle-diameter)) / 2
  );
  --toggle-shadow-offset: 10px;
  --toggle-wider: 3em;

  &-slider {
    @apply bg-gray-300;
    display: inline-block;
    width: var(--button-width);
    height: var(--button-height);

    border-radius: calc(var(--button-height) / 2);
    position: relative;
    transition: 0.3s all ease-in-out;

    &::after {
      content: '';
      display: inline-block;
      width: var(--toggle-diameter);
      height: var(--toggle-diameter);
      background-color: #fff;
      border-radius: calc(var(--toggle-diameter) / 2);
      position: absolute;
      top: var(--button-toggle-offset);
      transform: translateX(var(--button-toggle-offset));
      box-shadow: var(--toggle-shadow-offset) 0
        calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
      transition: 0.3s all ease-in-out;
    }
  }

  @each $color in var.$colors {
    &#{'.color-' + $color} {
      input[type='checkbox']:checked + .switch-slider {
        background-color: #{theme('colors.' + $color + '.500')};
      }
    }
  }

  input[type='checkbox']:checked + .switch-slider::after {
    transform: translateX(
      calc(
        var(--button-width) - var(--toggle-diameter) -
          var(--button-toggle-offset)
      )
    );
    box-shadow: calc(var(--toggle-shadow-offset) * -1) 0
      calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, 0.1);
  }

  input[type='checkbox'] {
    display: none;
  }

  input[type='checkbox']:active + .switch-slider::after {
    width: var(--toggle-wider);
  }

  input[type='checkbox']:checked:active + .switch-slider::after {
    transform: translateX(
      calc(
        var(--button-width) - var(--toggle-wider) - var(--button-toggle-offset)
      )
    );
  }
}
